#!/usr/bin/env python3

import os
import re

# Define the path to the GTK4 theme CSS file
gtk_theme_path = os.path.expanduser(f"~/.config/gtk-4.0/gtk.css")

# Read the GTK4 theme CSS file
with open(gtk_theme_path, "r") as f:
    css_content = f.read()

# function to extract colors using regex
def extract_color(css_content, color_name):
    match = re.search(f"{color_name}: (#[0-9a-fA-F]+);", css_content)
    return match.group(1) if match else None

# Extract colors for Rofi
background_color = extract_color(css_content, "background-color") or "#1e1e2e"
text_color = extract_color(css_content, "foreground-color") or "#cdd6f4"
selected_color = extract_color(css_content, "selected-background-color") or "#ffffff"
active_color = extract_color(css_content, "accent-color") or "#64e675"
urgent_color = extract_color(css_content, "error-color") or "#fa6e6e"

# Rofi colors.rasi content
rofi_colors = f"""
// Note: This is auto-generated by a script, don't edit it.

// Pywal colors
@theme "~/.cache/wal/colors-rofi-dark.rasi"

* {{
    background-color:               {background_color};
    background-color-elements:      rgba(0, 0, 0, 0.3);
    selected:                       {selected_color};
    active:                         {active_color};
    urgent:                         {urgent_color};
    border-color:                   @selected-urgent-background;
    text-color:                     {text_color};
}}
"""

# Write the colors.rasi file
output_path = os.path.expanduser("~/.config/rofi/colors.rasi")
with open(output_path, "w") as f:
    f.write(rofi_colors)

print(f"[Info]::Rofi colors.rasi file generated at {output_path}.")